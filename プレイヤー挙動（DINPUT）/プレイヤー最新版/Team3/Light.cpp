//=============================================================================
//
// ライト [light.cpp]
// Author: Sota Tomoe
//
//=============================================================================
#include "Light.h"
#include "Manager.h"

//*****************************************************************************
// カメラクラス
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CLight::CLight()
{

}

//=============================================================================
// デストラクタ
//=============================================================================
CLight::~CLight()
{

}

//=============================================================================
// 初期化
//=============================================================================
void CLight::Init(void)
{
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();	// デバイス
	D3DXVECTOR3 vecDir;	// 設定用方向ベクトル

	// ライトをクリアする
	ZeroMemory(&m_light, sizeof(D3DLIGHT9));

	// ライトの種類を設定
	m_light.Type = D3DLIGHT_DIRECTIONAL;	// 平行光源

											// ライトの拡散光を設定
	m_light.Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

	// ライトの方向を設定
	vecDir = D3DXVECTOR3(-0.2f, -0.8f, -0.4f);
	D3DXVec3Normalize(&vecDir, &vecDir);
	m_light.Direction = vecDir;

	// ライトを設定する
	pDevice->SetLight(0, &m_light);

	// ライトを有効にする
	pDevice->LightEnable(0, TRUE);

}

//=============================================================================
// 終了
//=============================================================================
void CLight::Uninit(void)
{

}

//=============================================================================
// 更新
//=============================================================================
void CLight::Update(void)
{

}