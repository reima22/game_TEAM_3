//=============================================================================
//
// 足場 [Scaffold.cpp]
// Author: Sota Tomoe
//
//=============================================================================
#include "Scaffold.h"

//*****************************************************************************
// 足場クラス
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CScaffold::CScaffold()
{

}

//=============================================================================
// デストラクタ
//=============================================================================
CScaffold::~CScaffold()
{

}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CScaffold::Init(D3DXVECTOR3 pos, D3DXVECTOR3 rot, D3DXVECTOR3 size)
{
	if (FAILED(CScene3DModel::Init(pos, rot, size))) {
		return E_FAIL;
	}

	BindModel("SCAFFOLD1");
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CScaffold::Uninit(void)
{
	CScene3DModel::Uninit();


}

//=============================================================================
// 更新処理
//=============================================================================
void CScaffold::Update(void)
{
	CScene3DModel::Update();


}

//=============================================================================
// 描画処理
//=============================================================================
void CScaffold::Draw(void)
{
	CScene3DModel::Draw();
}

//=============================================================================
// 生成関数
//=============================================================================
CScaffold *CScaffold::Create(D3DXVECTOR3 pos, D3DXVECTOR3 rot)
{
	CScaffold *pScaffold;
	pScaffold = new CScaffold;
	if (pScaffold != NULL)
	{
		pScaffold->Init(pos, rot, VECTOR3_ZERO);
	}

	return pScaffold;
}